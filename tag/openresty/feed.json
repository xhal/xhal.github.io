{
    "version": "https://jsonfeed.org/version/1",
    "title": "星辰大海 • All posts by \"openresty\" tag",
    "description": "学习、编程、生活",
    "home_page_url": "http://xsea.cc",
    "items": [
        {
            "id": "http://xsea.cc/2022/09/f92ce47.html",
            "url": "http://xsea.cc/2022/09/f92ce47.html",
            "title": "Nginx/Openresty日志时间显示到毫秒级的三种方法(不改源码)",
            "date_published": "2022-09-09T02:06:08.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>在这里，我们生成三个自定义变量</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#以下为内置变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$time_iso8601</span>  日期格式示例： <span class=\"token number\">2022</span>-09-08T18:16:01+08:00</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$time_local</span>    日期格式示例： 02/Aug/2022:11:11:32 +0800</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$msec</span>          日期格式示例： <span class=\"token number\">1663839717.105</span> 当前的Unix时间戳,单位为秒，小数为毫秒</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#生成自定义变量</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$time_zh</span>    示例值： <span class=\"token number\">2022</span>-10-08 <span class=\"token number\">22</span>:00:18</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$timestamp</span>  示例值： <span class=\"token number\">1663839717105</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$time_zh_ms</span> 示例值： <span class=\"token number\">2022</span>-10-08 <span class=\"token number\">22</span>:00:18,888</pre></td></tr></table></figure><h3 id=\"方法一-set-只能在server节点内\"><a class=\"markdownIt-Anchor\" href=\"#方法一-set-只能在server节点内\">#</a> 方法一 ：set  （只能在 server 节点内）</h3>\n<p>建议创建独立 conf 文件，使用 include 方式，如： <code>time-zh.conf</code>   内容如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 该 文件使用方法  在 nginx 配置 server 节点内：   include time-zh.conf;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># nginx 内置变量，解析为定义格式，仅支持到秒 （实现支持到毫秒）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># $time_iso8601  日期格式示例： 2022-09-08T18:16:01+08:00</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># $time_local    日期格式示例： 02/Aug/2022:11:11:32 +0800</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># $msec          日期格式示例： 1663839717.105 当前的 Unix 时间戳，单位为秒，小数为毫秒</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 自定义变量 - 默认值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#set $time_zh $time_iso8601;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#set $timestamp $msec;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#set $time_zh_ms $time_zh,000;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 格式化日期</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$time_iso8601</span> ~ <span class=\"token string\">\"^(\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)T(\\d&#123;2&#125;):(\\d&#123;2&#125;):(\\d&#123;2&#125;)(\\+\\d&#123;2&#125;)\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$year</span>   <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$month</span>  <span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$day</span>    <span class=\"token variable\">$3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$hour</span>   <span class=\"token variable\">$4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$minute</span> <span class=\"token variable\">$5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$second</span> <span class=\"token variable\">$6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\"># 时区，只到小时</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$time_zone</span> <span class=\"token variable\">$7</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\"># 自定义 yyyy-MM-dd hh:mi:ss 格式</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$time_zh</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>-<span class=\"token variable\">$2</span>-<span class=\"token variable\">$3</span> <span class=\"token variable\">$4</span>:<span class=\"token variable\">$5</span>:<span class=\"token variable\">$6</span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 时间戳，单位毫秒  使用 $msec 去除中间的小数点实现</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$msec</span> ~ <span class=\"token string\">\"^(\\d+)\\.(\\d+)\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$timestamp</span> <span class=\"token variable\">$1</span><span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token comment\"># 自定义 yyyy-MM-dd hh:mi:ss,SSS 带毫秒格式</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$time_zh_ms</span> <span class=\"token variable\">$time_zh</span>,<span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"方法二-set_by_lua-只能在server节点内\"><a class=\"markdownIt-Anchor\" href=\"#方法二-set_by_lua-只能在server节点内\">#</a> 方法二： set_by_lua （只能在 server 节点内）</h3>\n<p>建议创建独立 conf 文件，使用 include 方式，如： <code>time-zh-lua.conf</code>   内容如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 该 文件使用方法  在 nginx 配置 server 节点内：   include time-zh-lua.conf;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># nginx 内置变量，解析为定义格式，仅支持到秒 （实现支持到毫秒）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 取 ngx_lua 模块提供的带缓存的时间接口</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># ngx.now ()          日期格式示例： 1663839717.105  当前的 Unix 时间戳，单位为秒，小数为毫秒；与 nginx 内置变量 $msec 相同</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#                          -- 因 nginx 有缓存时间，所以与实际服务器时间会有些许偏差，可能偏差几毫秒 - 正常业务可忽略不计</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#                          -- 若 一定要强一致，可先调用 ngx.update_time () 强制更新，但成本较高，不推荐使用</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># ngx.time ()         日期格式示例： 1663839717  当前的 Unix 时间戳，单位为秒 (1970 年至今)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># ngx.var.time_local 日期格式示例： 02/Aug/2022:11:11:32 +0800</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># ngx.utctime ()      日期格式示例： 2022-09-08 10:16:01</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># ngx.localtime ()    日期格式示例： 2022-09-08 18:16:01</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ngx.today ()        日期格式示例： 2022-09-08</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 本地时间（yyyy-MM-dd hh:mi:ss）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>set_by_lua <span class=\"token variable\">$time_zh</span> <span class=\"token string\">'return ngx.localtime()'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># Unix 时间戳，单位为毫秒</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>set_by_lua <span class=\"token variable\">$timestamp</span> <span class=\"token string\">'return ngx.now() * 1000'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 本地时间（yyyy-MM-dd hh:mi:ss,SSS）</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 毫秒数： 先用 ngx.now ()%1, 取余数去除秒的部分，再 * 1000 获取毫秒部分，再用 math.floor + 0.5 四舍五入，再用 string.format 固定 3 位长度</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>set_by_lua <span class=\"token variable\">$time_zh_ms</span> <span class=\"token string\">'return ngx.localtime()..\",\"..string.format(\"%03d\", math.floor(ngx.now()%1*1000+0.5))'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"方法三-map-在http节点内\"><a class=\"markdownIt-Anchor\" href=\"#方法三-map-在http节点内\">#</a> 方法三： map （在 http 节点内）</h3>\n<p>建议创建独立 conf 文件，使用 include 方式，如： <code>time-zh-map.conf</code>   内容如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 该 文件使用方法  在 nginx 配置 http 节点内：   include time-zh-map.conf;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># nginx 内置变量，解析为定义格式，仅支持到秒</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># $time_iso8601  日期格式示例： 2022-09-08T18:16:01+08:00</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># $time_local    日期格式示例： 02/Aug/2022:11:11:32 +0800</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># $msec          日期格式示例： 1663839717.105 当前的 Unix 时间戳，单位为秒，小数为毫秒</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 使用以下 map 必须增加 map_hash_bucket_size 大小，否则会报异常</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 默认值为 cpu 的缓存行大小，一般为 64</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>map_hash_bucket_size <span class=\"token number\">128</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 自定义 yyyy-MM-dd hh:mi:ss 格式</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>map <span class=\"token variable\">$time_iso8601</span> <span class=\"token variable\">$time_zh</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  default <span class=\"token variable\">$time_iso8601</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token string\">\"~(\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;)T(\\d&#123;2&#125;:\\d&#123;2&#125;:\\d&#123;2&#125;)(\\+\\d&#123;2&#125;)\"</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 时间戳，单位毫秒  使用 $msec 去除中间的小数点实现</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>map <span class=\"token variable\">$msec</span> <span class=\"token variable\">$timestamp</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  default <span class=\"token variable\">$msec</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  ~<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>d+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>.<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>d+<span class=\"token punctuation\">)</span> <span class=\"token variable\">$1</span><span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 自定义 yyyy-MM-dd hh:mi:ss,SSS 带毫秒格式</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>map <span class=\"token string\">\"<span class=\"token variable\">$time_iso8601</span> # <span class=\"token variable\">$msec</span>\"</span> <span class=\"token variable\">$time_zh_ms</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  default <span class=\"token variable\">$time_zh</span>,000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token string\">\"~(\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;)T(\\d&#123;2&#125;:\\d&#123;2&#125;:\\d&#123;2&#125;)(\\+\\d&#123;2&#125;:\\d&#123;2&#125;) # (\\d+)\\.(\\d+)$\"</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span>,<span class=\"token variable\">$5</span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>PS: 若存在多个 Server, 推荐使用<strong>方法三</strong>，则不需要每个 server 配置一次</p>\n</blockquote>\n",
            "tags": [
                "Openresty",
                "Nginx"
            ]
        },
        {
            "id": "http://xsea.cc/2022/09/333f749f.html",
            "url": "http://xsea.cc/2022/09/333f749f.html",
            "title": "Centos7.9_源码安装Openresty1.21.4.1",
            "date_published": "2022-09-06T03:50:08.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"1-环境及版本\"><a class=\"markdownIt-Anchor\" href=\"#1-环境及版本\">#</a> 1、环境及版本</h2>\n<p>系统版本： Centos 7.9.2009</p>\n<p>Openresty:  1.21.4.1</p>\n<h2 id=\"2-必要组件安装执行-yum-命令安装\"><a class=\"markdownIt-Anchor\" href=\"#2-必要组件安装执行-yum-命令安装\">#</a> 2、必要组件安装 (执行 yum 命令安装)</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> openssl-devel gcc <span class=\"token function\">curl</span> pcre-devel <span class=\"token parameter variable\">-y</span></pre></td></tr></table></figure><h2 id=\"3-获取安装包-解压\"><a class=\"markdownIt-Anchor\" href=\"#3-获取安装包-解压\">#</a> 3、获取安装包、解压</h2>\n<p>访问官网地址： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVucmVzdHkub3Jn\">https://openresty.org</span></p>\n<p>获取下载链接： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVucmVzdHkub3JnL2Rvd25sb2FkL29wZW5yZXN0eS0xLjIxLjQuMS50YXIuZ3o=\">https://openresty.org/download/openresty-1.21.4.1.tar.gz</span></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 切换到目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/local</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># wget 下载安装包</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">wget</span>  https://openresty.org/download/openresty-1.21.4.1.tar.gz</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 解压命令</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> openresty-1.21.4.1.tar.gz</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 进入解压目录</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">cd</span> openresty-1.21.4.1</pre></td></tr></table></figure><h2 id=\"4-修改源码以支持-ip_hash-可以在内网同网段生效以实现负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#4-修改源码以支持-ip_hash-可以在内网同网段生效以实现负载均衡\">#</a> 4、修改源码，以支持  <code>ip_hash</code>  可以在内网同网段生效，以实现负载均衡</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@nginx openresty-1.21.4.1<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim bundle/nginx-1.21.4/src/http/modules/ngx_http_upstream_ip_hash_module.c</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 修改位置一：  第 80 行，数字 3 改为 4 ngx_http_upstream_ip_hash_pseudo_addr [3] 修改为 ngx_http_upstream_ip_hash_pseudo_addr [4] </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">80</span> static u_char ngx_http_upstream_ip_hash_pseudo_addr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">81</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 修改位置二：  第 124 行，数字 3 改为 4; [iphp->addrlen = 3] 修改为 [iphp->addrlen = 4] </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">121</span>     <span class=\"token keyword\">case</span> AF_INET:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">122</span>         sin <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>struct sockaddr_in *<span class=\"token punctuation\">)</span> r-<span class=\"token operator\">></span>connection-<span class=\"token operator\">></span>sockaddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">123</span>         iphp-<span class=\"token operator\">></span>addr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>u_char *<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>sin-<span class=\"token operator\">></span>sin_addr.s_addr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">124</span>         iphp-<span class=\"token operator\">></span>addrlen <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">125</span>         <span class=\"token builtin class-name\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">126</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">127</span> <span class=\"token comment\">#if (NGX_HAVE_INET6)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">128</span>     <span class=\"token keyword\">case</span> AF_INET6:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">129</span>         sin6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>struct sockaddr_in6 *<span class=\"token punctuation\">)</span> r-<span class=\"token operator\">></span>connection-<span class=\"token operator\">></span>sockaddr    <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">130</span>         iphp-<span class=\"token operator\">></span>addr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>u_char *<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>sin6-<span class=\"token operator\">></span>sin6_addr.s6_addr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">131</span>         iphp-<span class=\"token operator\">></span>addrlen <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">132</span>         <span class=\"token builtin class-name\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">133</span> <span class=\"token comment\">#endif</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">134</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 修改位置三：  第 137 行，数字 3 改为 4; [iphp->addrlen = 3] 修改为 [iphp->addrlen = 4] </span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">135</span>     default:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token number\">136</span>         iphp-<span class=\"token operator\">></span>addr <span class=\"token operator\">=</span> ngx_http_upstream_ip_hash_pseudo_addr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token number\">137</span>         iphp-<span class=\"token operator\">></span>addrlen <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">138</span>     <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"5-安装\"><a class=\"markdownIt-Anchor\" href=\"#5-安装\">#</a> 5、安装</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 执行 configure 命令 (默认安装目录 `--prefix=/usr/local/openresty`)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 需要的模块自定义，此处仅示例</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>./configure <span class=\"token parameter variable\">--prefix</span><span class=\"token operator\">=</span>/usr/local/openresty <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  --with-luajit <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  --with-http_ssl_module <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  --with-http_v2_module <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  --with-http_realip_module </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 执行安装命令</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><h2 id=\"6-开机启动\"><a class=\"markdownIt-Anchor\" href=\"#6-开机启动\">#</a> 6、 开机启动</h2>\n<h3 id=\"方法一-etcrclocal\"><a class=\"markdownIt-Anchor\" href=\"#方法一-etcrclocal\">#</a> 方法一 (/etc/rc.local)：</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@nginx local<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/rc.local</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># It is highly advisable to create own systemd services or udev rules</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># to run scripts during boot instead of using this file.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># In contrast to previous versions due to parallel execution during boot</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># this script will NOT be run after all other services.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># that this script will be executed during boot.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">touch</span> /var/lock/subsys/local</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 启动 Openresty nginx 服务</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>/usr/local/openresty/nginx/sbin/nginx</pre></td></tr></table></figure><blockquote>\n<p>PS: Centos7 默认 rc.local 是不可执行的，仅是为了兼容性添加。</p>\n<p>若重启验证不生效，则需要给此文件添加执行权限</p>\n<p>注意：此文件执行时，  <code>/etc/profile</code>  配置的环境变量不会生效</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@nginx home<span class=\"token punctuation\">]</span><span class=\"token comment\"># chmod +x /etc/rc.d/rc.local</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@nginx rc.d<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /etc/rc.d/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@nginx rc.d<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">70</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">15</span>:30 init.d</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">45</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">15</span>:30 rc0.d</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">45</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">15</span>:30 rc1.d</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">45</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">15</span>:30 rc2.d</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">45</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">15</span>:30 rc3.d</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">45</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">15</span>:30 rc4.d</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">45</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">15</span>:30 rc5.d</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>drwxr-xr-x. <span class=\"token number\">2</span> root root  <span class=\"token number\">45</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">15</span>:30 rc6.d</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>-rwxrwxrwx. <span class=\"token number\">1</span> root root <span class=\"token number\">550</span> Mar <span class=\"token number\">10</span> <span class=\"token number\">17</span>:36 rc.local</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@nginx rc.d<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><h3 id=\"方法二使用-service\"><a class=\"markdownIt-Anchor\" href=\"#方法二使用-service\">#</a> 方法二（使用 service）：</h3>\n<p>在系统服务目录  <code> /usr/lib/systemd/system/</code>  下，创建  <code>openresty.service</code>  文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 服务描述</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>Openresty</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 在 XX 服务后启动</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 服务运行参数； 注意本节点内命令要用绝对路径</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 后台运行方式</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">Type</span><span class=\"token operator\">=</span>forking</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 启动命令</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/local/openresty/nginx/sbin/nginx <span class=\"token parameter variable\">-c</span> /usr/local/openresty/nginx/conf/nginx.conf</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 是否给服务分配独立的临时空间</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">PrivateTmp</span><span class=\"token operator\">=</span>true</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 运行级别下服务安装的相关设置， 可设置为多用户，即系统运行级别为 3</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl <span class=\"token builtin class-name\">enable</span> openresty.service    <span class=\"token comment\"># 设置开机启动</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>systemctl disable openresty.service   <span class=\"token comment\"># 停止开机启动</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>systemctl start openresty.service     <span class=\"token comment\"># 启动服务</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>systemctl stop openresty.service      <span class=\"token comment\"># 停止服务</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>systemctl status openresty.service    <span class=\"token comment\"># 查看服务状态</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>systemctl restart openresty.service   <span class=\"token comment\"># 重启服务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>systemctl list-units <span class=\"token parameter variable\">--type</span><span class=\"token operator\">=</span>service   <span class=\"token comment\"># 查看所有已启动的服务</span></pre></td></tr></table></figure>",
            "tags": [
                "Openresty"
            ]
        }
    ]
}