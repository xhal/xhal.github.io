{
    "version": "https://jsonfeed.org/version/1",
    "title": "大海啊，全是水 • All posts by \"nginx\" tag",
    "description": "学习、编程、生活",
    "home_page_url": "http://liuh.cc",
    "items": [
        {
            "id": "http://liuh.cc/2022/09/f92ce47.html",
            "url": "http://liuh.cc/2022/09/f92ce47.html",
            "title": "Nginx/Openresty日志时间显示到毫秒级的三种方法(不改源码)",
            "date_published": "2022-09-09T02:06:08.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>在这里，我们生成三个自定义变量</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#以下为内置变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$time_iso8601</span>  日期格式示例： <span class=\"token number\">2022</span>-09-08T18:16:01+08:00</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$time_local</span>    日期格式示例： 02/Aug/2022:11:11:32 +0800</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$msec</span>          日期格式示例： <span class=\"token number\">1663839717.105</span> 当前的Unix时间戳,单位为秒，小数为毫秒</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#生成自定义变量</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$time_zh</span>    示例值： <span class=\"token number\">2022</span>-10-08 <span class=\"token number\">22</span>:00:18</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$timestamp</span>  示例值： <span class=\"token number\">1663839717105</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$time_zh_ms</span> 示例值： <span class=\"token number\">2022</span>-10-08 <span class=\"token number\">22</span>:00:18,888</pre></td></tr></table></figure><h3 id=\"方法一-set-只能在server节点内\"><a class=\"markdownIt-Anchor\" href=\"#方法一-set-只能在server节点内\">#</a> 方法一 ：set  （只能在 server 节点内）</h3>\n<p>建议创建独立 conf 文件，使用 include 方式，如： <code>time-zh.conf</code>   内容如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 该 文件使用方法  在 nginx 配置 server 节点内：   include time-zh.conf;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># nginx 内置变量，解析为定义格式，仅支持到秒 （实现支持到毫秒）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># $time_iso8601  日期格式示例： 2022-09-08T18:16:01+08:00</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># $time_local    日期格式示例： 02/Aug/2022:11:11:32 +0800</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># $msec          日期格式示例： 1663839717.105 当前的 Unix 时间戳，单位为秒，小数为毫秒</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 自定义变量 - 默认值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#set $time_zh $time_iso8601;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#set $timestamp $msec;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#set $time_zh_ms $time_zh,000;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 格式化日期</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$time_iso8601</span> ~ <span class=\"token string\">\"^(\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)T(\\d&#123;2&#125;):(\\d&#123;2&#125;):(\\d&#123;2&#125;)(\\+\\d&#123;2&#125;)\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$year</span>   <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$month</span>  <span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$day</span>    <span class=\"token variable\">$3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$hour</span>   <span class=\"token variable\">$4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$minute</span> <span class=\"token variable\">$5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$second</span> <span class=\"token variable\">$6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\"># 时区，只到小时</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$time_zone</span> <span class=\"token variable\">$7</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\"># 自定义 yyyy-MM-dd hh:mi:ss 格式</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$time_zh</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>-<span class=\"token variable\">$2</span>-<span class=\"token variable\">$3</span> <span class=\"token variable\">$4</span>:<span class=\"token variable\">$5</span>:<span class=\"token variable\">$6</span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 时间戳，单位毫秒  使用 $msec 去除中间的小数点实现</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$msec</span> ~ <span class=\"token string\">\"^(\\d+)\\.(\\d+)\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$timestamp</span> <span class=\"token variable\">$1</span><span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token comment\"># 自定义 yyyy-MM-dd hh:mi:ss,SSS 带毫秒格式</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$time_zh_ms</span> <span class=\"token variable\">$time_zh</span>,<span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"方法二-set_by_lua-只能在server节点内\"><a class=\"markdownIt-Anchor\" href=\"#方法二-set_by_lua-只能在server节点内\">#</a> 方法二： set_by_lua （只能在 server 节点内）</h3>\n<p>建议创建独立 conf 文件，使用 include 方式，如： <code>time-zh-lua.conf</code>   内容如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 该 文件使用方法  在 nginx 配置 server 节点内：   include time-zh-lua.conf;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># nginx 内置变量，解析为定义格式，仅支持到秒 （实现支持到毫秒）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 取 ngx_lua 模块提供的带缓存的时间接口</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># ngx.now ()          日期格式示例： 1663839717.105  当前的 Unix 时间戳，单位为秒，小数为毫秒；与 nginx 内置变量 $msec 相同</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#                          -- 因 nginx 有缓存时间，所以与实际服务器时间会有些许偏差，可能偏差几毫秒 - 正常业务可忽略不计</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#                          -- 若 一定要强一致，可先调用 ngx.update_time () 强制更新，但成本较高，不推荐使用</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># ngx.time ()         日期格式示例： 1663839717  当前的 Unix 时间戳，单位为秒 (1970 年至今)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># ngx.var.time_local 日期格式示例： 02/Aug/2022:11:11:32 +0800</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># ngx.utctime ()      日期格式示例： 2022-09-08 10:16:01</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># ngx.localtime ()    日期格式示例： 2022-09-08 18:16:01</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># ngx.today ()        日期格式示例： 2022-09-08</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 本地时间（yyyy-MM-dd hh:mi:ss）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>set_by_lua <span class=\"token variable\">$time_zh</span> <span class=\"token string\">'return ngx.localtime()'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># Unix 时间戳，单位为毫秒</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>set_by_lua <span class=\"token variable\">$timestamp</span> <span class=\"token string\">'return ngx.now() * 1000'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 本地时间（yyyy-MM-dd hh:mi:ss,SSS）</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 毫秒数： 先用 ngx.now ()%1, 取余数去除秒的部分，再 * 1000 获取毫秒部分，再用 math.floor + 0.5 四舍五入，再用 string.format 固定 3 位长度</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>set_by_lua <span class=\"token variable\">$time_zh_ms</span> <span class=\"token string\">'return ngx.localtime()..\",\"..string.format(\"%03d\", math.floor(ngx.now()%1*1000+0.5))'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"方法三-map-在http节点内\"><a class=\"markdownIt-Anchor\" href=\"#方法三-map-在http节点内\">#</a> 方法三： map （在 http 节点内）</h3>\n<p>建议创建独立 conf 文件，使用 include 方式，如： <code>time-zh-map.conf</code>   内容如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 该 文件使用方法  在 nginx 配置 http 节点内：   include time-zh-map.conf;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># nginx 内置变量，解析为定义格式，仅支持到秒</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># $time_iso8601  日期格式示例： 2022-09-08T18:16:01+08:00</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># $time_local    日期格式示例： 02/Aug/2022:11:11:32 +0800</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># $msec          日期格式示例： 1663839717.105 当前的 Unix 时间戳，单位为秒，小数为毫秒</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 使用以下 map 必须增加 map_hash_bucket_size 大小，否则会报异常</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 默认值为 cpu 的缓存行大小，一般为 64</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>map_hash_bucket_size <span class=\"token number\">128</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 自定义 yyyy-MM-dd hh:mi:ss 格式</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>map <span class=\"token variable\">$time_iso8601</span> <span class=\"token variable\">$time_zh</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  default <span class=\"token variable\">$time_iso8601</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token string\">\"~(\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;)T(\\d&#123;2&#125;:\\d&#123;2&#125;:\\d&#123;2&#125;)(\\+\\d&#123;2&#125;)\"</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 时间戳，单位毫秒  使用 $msec 去除中间的小数点实现</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>map <span class=\"token variable\">$msec</span> <span class=\"token variable\">$timestamp</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  default <span class=\"token variable\">$msec</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  ~<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>d+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>.<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>d+<span class=\"token punctuation\">)</span> <span class=\"token variable\">$1</span><span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 自定义 yyyy-MM-dd hh:mi:ss,SSS 带毫秒格式</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>map <span class=\"token string\">\"<span class=\"token variable\">$time_iso8601</span> # <span class=\"token variable\">$msec</span>\"</span> <span class=\"token variable\">$time_zh_ms</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  default <span class=\"token variable\">$time_zh</span>,000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token string\">\"~(\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;)T(\\d&#123;2&#125;:\\d&#123;2&#125;:\\d&#123;2&#125;)(\\+\\d&#123;2&#125;:\\d&#123;2&#125;) # (\\d+)\\.(\\d+)$\"</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span>,<span class=\"token variable\">$5</span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>PS: 若存在多个 Server, 推荐使用<strong>方法三</strong>，则不需要每个 server 配置一次</p>\n</blockquote>\n",
            "tags": [
                "Openresty",
                "Nginx"
            ]
        }
    ]
}