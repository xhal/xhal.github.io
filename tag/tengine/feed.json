{
    "version": "https://jsonfeed.org/version/1",
    "title": "星辰大海 • All posts by \"tengine\" tag",
    "description": "学习、编程、生活",
    "home_page_url": "http://xsea.cc",
    "items": [
        {
            "id": "http://xsea.cc/2022/03/cca36461.html",
            "url": "http://xsea.cc/2022/03/cca36461.html",
            "title": "Centos安装Tengine",
            "date_published": "2022-03-22T15:14:56.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"centos-安装-tengine\"><a class=\"markdownIt-Anchor\" href=\"#centos-安装-tengine\">#</a> Centos 安装 Tengine</h1>\n<blockquote>\n<p>记录下源码安装 Tengine 过程记录</p>\n</blockquote>\n<ol>\n<li>\n<p>下载及解压包</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## 进入 /usr/local/ 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /usr/local/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">## 下载源码包</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun local<span class=\"token punctuation\">]</span><span class=\"token comment\"># wget http://tengine.taobao.org/download/tengine-2.3.2.tar.gz</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">## 解压</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun local<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -zxvf tengine-2.3.2.tar.gz</span></pre></td></tr></table></figure></li>\n<li>\n<p>cd 切换到 Tengine 解压目录</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun local<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd tengine-2.3.2/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun tengine-2.3.2<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure></li>\n<li>\n<p>配置安装，包含健康检查 check 模块 (默认安装目录  <code> /usr/local/nginx</code> )</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun tengine-2.3.2<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./configure --add-module=modules/ngx_http_upstream_check_module</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun tengine-2.3.2<span class=\"token punctuation\">]</span><span class=\"token comment\"># make</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun tengine-2.3.2<span class=\"token punctuation\">]</span><span class=\"token comment\"># make install</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>\n<p>开机启动</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@ss-aliyun local<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/rc.local</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># It is highly advisable to create own systemd services or udev rules</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># to run scripts during boot instead of using this file.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># In contrast to previous versions due to parallel execution during boot</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># this script will NOT be run after all other services.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># that this script will be executed during boot.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">touch</span> /var/lock/subsys/local</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 启动 nginx 服务</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>/usr/local/nginx/sbin/nginx</pre></td></tr></table></figure></li>\n<li>\n<p>配置 nginx.conf</p>\n</li>\n</ol>\n<p>PS: 此处删除了 默认 80 端口 静态 html 配置，若需要则在拓展  <code>vhost/</code>  目录下自己添加配置</p>\n<pre><code class=\"language-config\">#user  nobody;\nworker_processes  auto;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n#error_log  &quot;pipe:rollback logs/error_log interval=1d baknum=7 maxsize=2G&quot;;\n\n#pid        logs/nginx.pid;\n\n\nevents &#123;\n    worker_connections  1024;\n&#125;\n\n\nhttp &#123;\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    charset utf-8;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] &quot;$request&quot; '\n    #                  '$status $body_bytes_sent &quot;$http_referer&quot; '\n    #                  '&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;';\n\n    #access_log  logs/access.log  main;\n    #access_log  &quot;pipe:rollback logs/access_log interval=1d baknum=7 maxsize=2G&quot;  main;\n\n    log_format xformat '$time_local - [$scheme $host] $remote_addr[$request] $status $body_bytes_sent '\n                      '$upstream_addr - $upstream_response_time';\n    access_log  logs/access.log xformat;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    gzip  on;\n\n    include ./vhost/*.conf;\n    \n    #upstream dubbo_backend &#123;\n    #    multi 1;\n    #    server 127.0.0.1:20880;\n    #&#125;\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server &#123;\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / &#123;\n    #        root   html;\n    #        index  index.html index.htm;\n    #    &#125;\n    #&#125;\n\n\n    # HTTPS server\n    #\n    #server &#123;\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:2m;\n    #    ssl_session_timeout  4h;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / &#123;\n    #        root   html;\n    #        index  index.html index.htm;\n    #    &#125;\n    #&#125;\n&#125;\n</code></pre>\n",
            "tags": [
                "Nginx",
                "Centos",
                "Tengine"
            ]
        }
    ]
}